using LES.Core.Common.HttpContextUser;
using LES.Core.Extensions.Others;
using LES.Core.IServices;
using LES.Core.Model;
using LES.Core.Model.Models;
using LES.Core.Model.ParamModels;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace LES.Core.Api.Controllers
{
    /// <summary>
    /// $ChinaComment$控制器
    /// </summary>
    [Route("api/[controller]/[action]")]
    [ApiController]
    [Authorize(Permissions.Name)]
    public class $EntityName$Controller : ControllerBase
    {
        private readonly I$EntityName$Services _$EntityName$Services;
        private readonly IUser _user;

        public $EntityName$Controller(I$EntityName$Services $EntityName$Services, IUser user)
        {
            _$EntityName$Services = $EntityName$Services;
            _user = user;
        }

        /// <summary>
        /// 分页获取$ChinaComment$列表
        /// </summary>
        /// <param name="param">筛选条件</param>
        /// <returns>获取结果</returns>
        [HttpPost]
        public async Task<MessageModel<PageModel<$EntityName$>>> Get([FromBody] $EntityName$Param param)
        {
            if (string.IsNullOrEmpty(param.searchVal) || string.IsNullOrWhiteSpace(param.searchVal))
            {
                param.searchVal = string.Empty;
            }
            
            var whereConditions=WhereConditionsExtensions.GetWhereConditions<$EntityName$, $EntityName$Param>(param);
            if (!whereConditions.IsSuccess) {
                return new MessageModel<PageModel<Role>>()
                {
                    msg = whereConditions.ErrMsg,
                    success = false,
                    response = null
                };
            }
			var data = await _roleServices.QueryPage(whereConditions.data, param.page, param.pageSize, " Id desc ");
            return new MessageModel<PageModel<$EntityName$>>()
            {
                msg = "获取成功",
                success = true,
                response = data
            };

        }

        /// <summary>
        /// 获取单个$ChinaComment$
        /// </summary>
        /// <param name="id">主键</param>
        /// <returns>获取结果</returns>
        [HttpGet]
        public async Task<MessageModel<$EntityName$>> Get(int id = 0)
        {
            return new MessageModel<$EntityName$>()
            {
                msg = "获取成功",
                success = true,
                response = await _$EntityName$Services.QueryById(id)
            };
        }

        /// <summary>
        /// 新增$ChinaComment$
        /// </summary>
        /// <param name="request">要新增的$ChinaComment$对象</param>
        /// <returns></returns>
        [HttpPost]
        public async Task<MessageModel<string>> Post([FromBody] $EntityName$ request)
        {
            var data = new MessageModel<string>();

            request.CreateTime = request.ModifyTime = DateTime.Now;
            request.CreateBy = request.ModifyBy = _user.Name;
            request.CreateId = request.ModifyId = _user.ID;
            request.OperationRemark = "添加";
            var id = await _$EntityName$Services.Add(request);
            data.success = id > 0;

            if (data.success)
            {
                data.response = id.ObjToString();
                data.msg = "添加成功";
            }

            return data;
        }

        /// <summary>
        /// 更新$ChinaComment$
        /// </summary>
        /// <param name="request">要更新的$ChinaComment$对象</param>
        /// <returns>更新结果</returns>
        [HttpPut]
        public async Task<MessageModel<string>> Put([FromBody] $EntityName$ request)
        {
            var data = new MessageModel<string>();
            if (request.Id > 0)
            {
                request.ModifyTime = DateTime.Now;
                request.ModifyBy = _user.Name;
                request.ModifyId = _user.ID;
                request.OperationRemark = "更新";
                data.success = await _$EntityName$Services.Update(request);
                if (data.success)
                {
                    data.msg = "更新成功";
                    data.response = request?.Id.ObjToString();
                }
            }

            return data;
        }

        /// <summary>
        /// 删除$ChinaComment$
        /// </summary>
        /// <param name="id">主键</param>
        /// <returns>删除结果</returns>
        [HttpDelete]
        public async Task<MessageModel<string>> Delete(int id = 0)
        {
            var data = new MessageModel<string>();
            if (id > 0)
            {
                var detail = await _$EntityName$Services.QueryById(id);

                detail.ModifyTime = DateTime.Now;
                detail.ModifyBy = _user.Name;
                detail.ModifyId = _user.ID;
                detail.IsDeleted = true;
                detail.OperationRemark = "删除";

                if (detail != null)
                {
                    data.success = await _$EntityName$Services.Update(detail);
                    if (data.success)
                    {
                        data.msg = "删除成功";
                        data.response = detail?.Id.ObjToString();
                    }
                }
            }

            return data;
        }
    }
}