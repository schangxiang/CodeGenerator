using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Activation;
using WIP_BLL;
using WIP_common;
using WIP_common.Models;
using WIP_Models;

namespace $Wcf_NameSpacePath$
{
    [ServiceBehavior(InstanceContextMode = InstanceContextMode.PerCall)]
    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]
    [KnownType(typeof(TestModel))]
    public class $Modulelogo$Service : I$Modulelogo$Service
    {
        private $FilePrefixName$BLL $TableAlias$BLL = new $FilePrefixName$BLL();

        #region 插入$ChinaComment$

        /// <summary>
        /// 插入$ChinaComment$
        /// </summary>
        /// <param name="param">要插入的$ChinaComment$参数类</param>
        /// <returns></returns>
        public ReturnBody<string> Insert$Modulelogo$($AddEntityParam$ param)
        {
            ReturnBody<string> retBody = null;
			UdtWip_ExceptionInfo exception = LogHelper.GetNewExceptionInfo<$AddEntityParam$>(namespaceName,"Insert$Modulelogo$", param);
            try
            {
                #region 验证
                if (param == null)
                {
				    exception.exceptionMsg = ResMsg.PARAMETERNOEMPTY;
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY,ResMsg.PARAMETERNOEMPTY,exception);
                    return retBody;
                }
                $ValidateEmptyForInsert$
                ValidateResModel res = ValidateData.ValidateNullOrEmpty<$AddEntityParam$>(columnsList, param);
                if (res != null && !res.IsValidate)
                {
				    exception.exceptionMsg =  res.ValidateMsg;
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, res.ValidateMsg, exception);
                    return retBody;
                }
                //验证重复
                if ($TableAlias$BLL.Exists(param.$PrimaryKey$.ToString()))
                {
				    exception.exceptionMsg = "数据已经存在";
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE, exception.exceptionMsg, exception);
                    return retBody;
                }
                #endregion

				string creator="sys";
                if ($TableAlias$BLL.Add(param,creator)>0)
                {
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.SUCCESS, ResMsg.SUCCESS);
                }
                else
                {//失败
				    exception.exceptionMsg = "保存数据失败";
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE,exception.exceptionMsg, exception);
                }
                return retBody;
            }
            catch (Exception ex)
            {
			    LogHelper.GetExceptionInfoForError(ex, ref exception);
                retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE, ResMsg.FAILURE, exception);
                return retBody;
            }
        }
        public string Insert$Modulelogo$0()
        {
            return "OK";
        }

        #endregion

        #region 更新$ChinaComment$

        /// <summary>
        /// 更新$ChinaComment$
        /// </summary>
        /// <param name="model">要更新的$ChinaComment$实体</param>
        /// <returns></returns>
        public ReturnBody<string> Update$Modulelogo$($EntityName$ model)
        {
            ReturnBody<string> retBody = null;
			UdtWip_ExceptionInfo exception = LogHelper.GetNewExceptionInfo<$EntityName$>(namespaceName,"Update$Modulelogo$", model);
            try
            {
                #region 验证
                if (model == null || $ValidateEmptyStrForPrimaryKey$ )
                {
				    exception.exceptionMsg = ResMsg.PARAMETERNOEMPTY;
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, exception.exceptionMsg, exception);
                    return retBody;
                }
                $ValidateEmptyForUpdate$
                ValidateResModel res = ValidateData.ValidateNullOrEmpty<$EntityName$>(columnsList, model);
                if (res != null && !res.IsValidate)
                {
				    exception.exceptionMsg =res.ValidateMsg;
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.PARAMETERNOEMPTY, exception.exceptionMsg, exception);
                    return retBody;
                }
				//验证重复
                if ($TableAlias$BLL.Exists(model.$PrimaryKey$.ToString(),model.id))
                {
				    exception.exceptionMsg = "数据已经存在";
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE, exception.exceptionMsg, exception);
                    return retBody;
                }

                #endregion

				string lastModifier="sys";
                bool result=$TableAlias$BLL.Update(model,lastModifier);
                if (result)
                {
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.SUCCESS,ResMsg.SUCCESS);
                }
                else
                {
				    exception.exceptionMsg = "更新失败";
                    retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE,exception.exceptionMsg, exception);
                }
                return retBody;
            }
            catch (Exception ex)
            {
			    LogHelper.GetExceptionInfoForError(ex, ref exception);
                retBody = WIPCommon.GetReturnBody<string>(ResCode.FAILURE,ResMsg.FAILURE, exception);
                return retBody;
            }
        }
        public string Update$Modulelogo$0()
        {
            return "OK";
        }

        #endregion

        #region 获取$ChinaComment$列表（分页）

        /// <summary>
        /// 获取$ChinaComment$列表（分页）
        /// </summary>
        /// <returns></returns>
        public ReturnBody<PageResultModel<$EntityName$>> Get$Modulelogo$List(Query$Modulelogo$Param pageParam)
        {
			UdtWip_ExceptionInfo exception = LogHelper.GetNewExceptionInfo<Query$Modulelogo$Param>(namespaceName,"Get$Modulelogo$List", pageParam); 
			try
            {
                PageResultModel<$EntityName$> list = $TableAlias$BLL.GetModelListForPage(pageParam);
                return WIPCommon.GetReturnBody<PageResultModel<$EntityName$>>(ResCode.SUCCESS, ResMsg.SUCCESS, list);
            }
            catch (Exception ex)
            {
                LogHelper.GetExceptionInfoForError(ex, ref exception);
                return WIPCommon.GetReturnBody<PageResultModel<$EntityName$>>(ResCode.FAILURE, ResMsg.FAILURE, exception);
            }
        }
        public string Get$Modulelogo$List0()
        {
            return "OK";
        }

        #endregion

        #region 获取单个$ChinaComment$


        /// <summary>
        /// 获取单个$ChinaComment$
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public ReturnBody<$EntityName$> GetSingle$Modulelogo$(Query$Modulelogo$Param model)
        {
		    UdtWip_ExceptionInfo exception = LogHelper.GetNewExceptionInfo<Query$Modulelogo$Param>(namespaceName,"GetSingle$Modulelogo$", model);
            try
            {
                #region 验证
                if (model == null || $ValidateEmptyStrForPrimaryKey$ )
                {
					exception.exceptionMsg = ResMsg.PARAMETERNOEMPTY;
                    return WIPCommon.GetReturnBody<$EntityName$>(ResCode.PARAMETERNOEMPTY,exception.exceptionMsg, exception);
                }
                #endregion
                var retModel = $TableAlias$BLL.GetModel(model.$PrimaryKey$.ToString());
                if (retModel == null)
                {
				    exception.exceptionMsg = "没有找到数据";
                    return WIPCommon.GetReturnBody<$EntityName$>(ResCode.FAILURE, exception.exceptionMsg, exception);
                }
                return WIPCommon.GetReturnBody<$EntityName$>(ResCode.SUCCESS, ResMsg.SUCCESS, retModel);
            }
            catch (Exception ex)
            {
			    LogHelper.GetExceptionInfoForError(ex, ref exception);
                return WIPCommon.GetReturnBody<$EntityName$>(ResCode.FAILURE,ResMsg.FAILURE, exception);
            }
        }


        public string GetSingle$Modulelogo$0()
        {
            return "ok";
        }


        #endregion

		#region 禁启用$ChinaComment$


        /// <summary>
        /// 禁启用$ChinaComment$
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public ReturnBody<bool> Enable$Modulelogo$(Query$Modulelogo$Param model)
        {
		    UdtWip_ExceptionInfo exception = LogHelper.GetNewExceptionInfo<Query$Modulelogo$Param>(namespaceName,"Enable$Modulelogo$", model);
            try
            {
                #region 验证
                if (model == null || $ValidateEmptyStrForPrimaryKey$ )
                {
					exception.exceptionMsg = ResMsg.PARAMETERNOEMPTY;
                    return WIPCommon.GetReturnBody<bool>(ResCode.PARAMETERNOEMPTY,exception.exceptionMsg, exception);
                }
                #endregion

				string lastModifier="sys";
                var result = $TableAlias$BLL.Enable(model.$PrimaryKey$.ToString(),model.delFlag,lastModifier);
				return WIPCommon.GetReturnBody<bool>(ResCode.SUCCESS, ResMsg.SUCCESS, result);
            }
            catch (Exception ex)
            {
			    LogHelper.GetExceptionInfoForError(ex, ref exception);
                return WIPCommon.GetReturnBody<bool>(ResCode.FAILURE,ResMsg.FAILURE, exception);
            }
        }

        public string Enable$Modulelogo$0()
        {
            return "ok";
        }


        #endregion
    }
}
